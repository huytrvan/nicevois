import Image from 'next/image';
import { useState } from 'react';
import {
    Tabs,
    TabsList,
    TabsTrigger,
    TabsContent
} from '@/components/ui/tabs';
import { Search, Clock } from 'lucide-react';
import { Button } from '@/components/ui/button';

export default function LyricChangerPage() {
    const [searchQuery, setSearchQuery] = useState('');

    return (
        <main className="min-h-0 w-full">
            <div className="w-full" style={{ minHeight: '100%' }}>
                <section className="mx-auto w-full max-w-[1280px] flex flex-col space-y-4 px-6 sm:px-12 md:px-16 lg:px-32 xl:px-40 2xl:px-52">
                    {/* Header/Nav */}
                    <nav className="w-full bg-transparent px-4 pb-4">
                        <div className="container mx-auto flex justify-end">
                            <Button
                                className="h-10 px-4 py-2 bg-primary hover:bg-primary/90 text-neutral-50"
                                type="button"
                            >
                                Sign In to Save Lyrics
                            </Button>
                        </div>
                    </nav>

                    {/* Step Indicator */}
                    <div className="flex flex-col space-y-4 md:space-y-6">
                        <section className="flex items-center gap-2">
                            <StepIndicator step={1} label="Original" active={true} />
                            <StepDivider />
                            <StepIndicator step={2} label="Your Ideas" active={false} />
                            <StepDivider />
                            <StepIndicator step={3} label="Review" active={false} />
                            <StepDivider />
                            <StepIndicator step={4} label="Add-Ons" active={false} />
                        </section>
                    </div>

                    {/* Content Section */}
                    <div className="flex flex-1 flex-col space-y-2">
                        <h3 className="scroll-m-20 font-azbuka tracking-normal dark:text-white my-2 text-[22px] md:my-4 md:text-[28px] text-white duration-1000 ease-in-out animate-in fade-in">
                            Add The Original Song
                        </h3>

                        {/* Info Alert */}
                        <div className="relative w-full rounded-lg p-4 dark:border-gray-100/5 bg-primary/80 text-white/80 text-sm md:text-base" role="alert">
                            <div className="flex flex-col gap-2">
                                <p className="scroll-m-20 font-roboto text-sm font-normal tracking-wide dark:text-white text-inherit leading-5 md:leading-6">
                                    Choose how you want to add your song: <br />
                                    <span className="my-1.5 flex flex-row items-start gap-2">
                                        <Search className="mt-1 size-4 md:size-5 flex-shrink-0" stroke="currentColor" strokeWidth={2.15} />
                                        <span className="flex-1">
                                            <strong>Quick Search:</strong> Search Genius database to automatically find and import lyrics
                                        </span>
                                    </span>
                                    <span className="flex flex-row items-start gap-2">
                                        <Clock className="mt-1 size-4 md:size-5 flex-shrink-0" stroke="currentColor" strokeWidth={2.15} />
                                        <span className="flex-1">
                                            <strong>Manual Entry:</strong> Paste a song URL and add lyrics from any source
                                        </span>
                                    </span>
                                </p>
                            </div>
                        </div>

                        {/* Tabs */}
                        <Tabs defaultValue="search" className="flex-1">
                            <TabsList className="h-12 items-center justify-center rounded-full text-muted-foreground dark:bg-foundation-secondary my-2 -mb-3 grid w-full grid-cols-2 gap-2 bg-transparent p-0">
                                <TabsTrigger
                                    value="search"
                                    className="inline-flex h-11 items-center justify-center rounded-full px-3 py-1.5 font-medium ring-offset-foundation transition-all whitespace-nowrap bg-primary/10 text-xs md:text-sm text-white hover:bg-primary/15 hover:ring hover:ring-secondary/20 data-[state=active]:bg-primary data-[state=active]:font-semibold data-[state=active]:text-white data-[state=active]:shadow-sm data-[state=active]:hover:ring-primary/50"
                                >
                                    <Search className="mr-1.5 size-4 max-[380px]:hidden md:size-5 flex-shrink-0" />
                                    Quick Search
                                </TabsTrigger>
                                <TabsTrigger
                                    value="manual"
                                    className="inline-flex h-11 items-center justify-center rounded-full px-3 py-1.5 font-medium ring-offset-foundation transition-all whitespace-nowrap bg-primary/10 text-xs md:text-sm text-white hover:bg-primary/15 hover:ring hover:ring-secondary/20 data-[state=active]:bg-primary data-[state=active]:font-semibold data-[state=active]:text-white data-[state=active]:shadow-sm data-[state=active]:hover:ring-primary/50"
                                >
                                    <Clock className="mr-1.5 size-4 max-[380px]:hidden md:size-5 flex-shrink-0" />
                                    Manual Entry
                                </TabsTrigger>
                            </TabsList>

                            <TabsContent value="search" className="py-6 mt-4 flex flex-1 flex-col gap-4">
                                <p className="scroll-m-20 font-roboto font-normal tracking-wide dark:text-white text-sm md:text-base text-white">
                                    Search for your song below. Once selected, it may take a few seconds to load the lyrics.
                                </p>

                                <form>
                                    <fieldset className="mb-3.5 flex flex-col gap-0.5 last:mb-0 relative">
                                        <Search className="absolute left-3 top-1/2 -translate-y-1/2 size-4 md:size-5 text-gray-400" />
                                        <input
                                            className="flex w-full rounded-md border border-component-input bg-foundation px-3 py-1 shadow-sm shadow-black/10 transition-colors h-10 md:h-12 pl-10 pr-8 text-sm md:text-base text-primary dark:bg-foundation-secondary dark:text-white dark:placeholder:text-muted/75"
                                            type="text"
                                            placeholder="Search for a Song..."
                                            value={searchQuery}
                                            onChange={(e) => setSearchQuery(e.target.value)}
                                        />
                                    </fieldset>
                                </form>

                                {/* Empty State */}
                                <div className="flex flex-col gap-5 md:gap-6 text-center max-w-md mx-auto mt-4">
                                    <Image
                                        src="/main.png"
                                        alt="Lyric Changer Main Logo"
                                        width={250}
                                        height={250}
                                        className="mx-auto size-20 md:size-24"
                                    />
                                    <div>
                                        <h3 className="scroll-m-20 font-azbuka tracking-normal dark:text-white text-lg md:text-xl text-white">
                                            We await your Song Lyrics!
                                        </h3>
                                        <h5 className="scroll-m-20 tracking-normal dark:text-white font-roboto text-sm md:text-base text-white">
                                            Search for your song above.
                                        </h5>
                                    </div>
                                </div>
                            </TabsContent>

                            <TabsContent value="manual" className="py-6 mt-4">
                                {/* Manual entry content will go here */}
                            </TabsContent>
                        </Tabs>
                    </div>
                </section>
            </div>
        </main>
    );
}

// Helper Components
function StepIndicator({ step, label, active }: { step: number, label: string, active: boolean }) {
    return (
        <div className="flex flex-col items-center" style={{ opacity: 1, transform: 'translateY(2px)' }}>
            <button
                className="inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-normal transition duration-150 hover:ring focus-visible:outline-none disabled:pointer-events-none size-6 px-2 rounded-full peer font-roboto bg-primary text-primary-foreground hover:bg-primary/90 hover:ring-primary/50 disabled:bg-white/80 disabled:text-primary disabled:opacity-10"
                type="button"
                disabled={!active}
                role="tab"
            >
                {step}
            </button>
            <p className="scroll-m-20 font-roboto text-sm leading-normal tracking-wide dark:text-white mt-2 text-center font-semibold text-white peer-disabled:font-normal peer-disabled:opacity-10">
                {label}
            </p>
        </div>
    );
}

function StepDivider() {
    return (
        <div
            role="none"
            className="dark:bg-gray-100/5 w-full -mt-6 h-[1.75px] flex-1 duration-1000 animate-in fade-in bg-white/5"
        />
    );
}